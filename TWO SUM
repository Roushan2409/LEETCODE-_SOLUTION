class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        
        vector<int> arr(2);
        map<int,int> myma;
        //O(n)
        for(int i=0;i<nums.size();i++)
        {
            myma[nums[i]]=i; // having index value in map
        }
        for(int i=0;i<nums.size();i++)
        {
            int diff= target-nums[i];
            if(myma[diff] && myma[diff]!=i)
            {
                arr[0]=i;
                arr[1]=myma[diff];
            }
        }
        return arr;
    }
};

*/Example 1:

Input: nums = [2,7,11,15], target = 9
Output: [0,1]
Output: Because nums[0] + nums[1] == 9, we return [0, 1].
Example 2:

Input: nums = [3,2,4], target = 6
Output: [1,2]
Example 3:

Input: nums = [3,3], target = 6
Output: [0,1]
*/
